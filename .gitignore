＃https://www.gitignore.io/api/c++,visualstudioによって作成された
＃https://www.gitignore.io/?templates=c++,visualstudioで編集

### C ++ ###
＃前提条件
* .d

＃コンパイル済みオブジェクトファイル
* .slo
* .lo
* .o
* .obj

＃プリコンパイル済みヘッダー
* .gch
* .pch

＃コンパイル済み動的ライブラリ
*。そう
* .dylib
* .dll

＃Fortranモジュールファイル
* .mod
* .smod

＃コンパイル済みスタティックライブラリ
* .lai
* .la
* .a
* .lib

＃実行ファイル
*。EXE
*。でる
* .app

### VisualStudio ###
## Visual Studioの一時ファイルを無視し、結果をビルドし、
人気のあるVisual Studioアドオンによって生成された##ファイル。
##
## https://github.com/github/gitignore/blob/master/VisualStudio.gitignoreから最新の情報を入手してください

＃ユーザー固有のファイル
* .rsuser
* .suo
*。ユーザー
* .userosscache
* .sln.docstates

＃ユーザー固有のファイル（MonoDevelop / Xamarin Studio）
* .userprefs

＃モノ自動生成ファイル
mono_crash。*

＃ビルド結果
[Dd] ebug /
[Dd] ebugPublic /
[Rr] elease /
[Rr]リース/
x 64 /
x86 /
[Aa] [Rr] [Mm] /
[Aa] [Rr] [Mm] 64 /
ビル/
[Bb] /
[O] Bj /
[ll] og /

＃Visual Studio 2015/2017 cache / optionsディレクトリ
.vs /
＃wwwrootにプロジェクトの静的ファイルを作成するタスクがある場合はコメントを外します。
＃wwwroot /

＃Visual Studio 2017自動生成ファイル
生成された\ Files /

＃MSTestテストの結果
[前] [前] [前] [*]
[Bb] uild [Ll] og。*

＃NUNIT
* .VisualState.xml
TestResult.xml

＃ATLプロジェクトの結果を構築する
[Dd] ebugPS /
[Rr] eleasePS /
dlldata.c

＃ベンチマーク結果
BenchmarkDotNet.Artifacts /

＃.NETコア
project.lock.json
project.fragment.lock.json
アーティファクト/

＃StyleCop
StyleCopReport.xml

＃Visual Studioによって構築されたファイル
*_IC
* _p.c
* _h.h
* .ilk
* .meta
* .iobj
* .pdb
* .ipdb
* .pgc
* .pgd
* .rsp
* .sbr
* .tlb
* .tli
* .tlh
* .tmp
* .tmp_proj
* _wpftmp.csproj
*。ログ
* .vspscc
* .vssscc
.builds
* .pidb
* .svclog
* .scc

＃Chutzpahテストファイル
_チュツパ*

＃Visual C ++キャッシュファイル
ipch /
* .aps
* .ncb
* .opendb
* .opensdf
* .sdf
* .cachefile
* .VC.db
* .VC.VC.opendb

＃Visual Studioプロファイラ
* .psess
* .vsp
* .vspx
* .sap

＃Visual Studioのトレースファイル
* .e2e

＃TFS 2012ローカルワークスペース
$ tf /

＃ガイダンスオートメーションツールキット
* .gpState

＃ReSharperは.NETコーディングアドインです。
_ReSharper * /
*。[Rr] e [Ss] harper
* .DotSettings.user

＃JustCodeは.NETコーディングアドインです。
.JustCode

＃TeamCityはビルドアドインです。
_TeamCity *

＃DotCoverはコードカバレッジツールです
* .dotCover

＃AxoCoverはコードカバレッジツールです
.axoCover / *
！.axoCover / settings.json

＃Visual Studioのコードカバレッジ結果
*。カバレッジ
* .coveragexml

＃NCrunch
_NCrunch_ *
。* crunch * .local.xml
nCrunchTemp_ *

＃マイティムース
* .mm *
AutoTest.Net/

＃Webワークベンチ（sass）
.sass-cache /

＃Installshieldの出力フォルダ
[Ee] xpress /

＃DocProjectはドキュメンテーションジェネレータアドインです。
DocProject / buildhelp /
DocProject / Help / *。HxT
DocProject / Help / *。HxC
DocProject / Help / *。hhc
DocProject / Help / *。hhk
DocProject / Help / *。hhp
DocProject /ヘルプ/ HTML2
DocProject /ヘルプ/ html

＃Click-Onceディレクトリ
公開/

＃Web出力を公開する
*。[Pp] ublish.xml
* .azurePubxml
＃注意：Web配置設定をチェックインしたい場合は、次の行をコメントしてください。
＃ただし、データベース接続文字列（パスワードを含む可能性がある）は暗号化されない
* .pubxml
* .publishproj

＃Microsoft Azure Web Appの公開設定。あなたがしたい場合は、次の行をコメント
＃Azure Web Appの公開設定をチェックインしますが、機密情報が含まれています
これらのスクリプトの＃は暗号化されません
PublishScripts /

＃NuGetパッケージ
* .nupkg
＃パッケージの復元のため、packagesフォルダは無視できます。
** / [Pp] ackages / *
MSBuildターゲットとして使用されるbuild /を除く＃。
！** / [Pp] ackages / build /
＃必要に応じてコメントを外しますが、通常は必要に応じて再生成されます。
＃！** / [Pp] ackages / repositories.config
＃NuGet v3のproject.jsonファイルはもっと無視できるファイルを生成します
* .nuget.props
* .nuget.targets

＃Microsoft Azureビルド出力
csx /
* .build.csdef

＃Microsoft Azureエミュレータ
ecf /
rcf /

＃Windowsストアアプリパッケージのディレクトリとファイル
AppPackages /
BundleArtifacts /
Package.StoreAssociation.xml
_pkginfo.txt
* .appx
* .appxbundle
* .appxupload

＃Visual Studioのキャッシュファイル
.cacheで終わるファイルは無視できます
*。[Cc]痛み
＃が.cacheで終わるディレクトリを追跡する
[Cc]痛み/

＃その他
ClientBin /
?$ *
*?
* .dbmdl
* .dbproj.schemaview
* .jfm
* .pfx
* .publishsettings
orleans.codegen.cs

＃厳密な名前のファイルを含めるとセキュリティ上のリスクが生じる可能性があります。
＃（https://github.com/github/gitignore/pull/2483#issue-259490424）
＃*。シンク

＃複数のワークフローがあるので、bower_componentsを無視するために次の行のコメントを外します。
＃（https://github.com/github/gitignore/pull/1529#issuecomment-104372622）
＃bower_components /

＃RIA / Silverlightプロジェクト
生成コード/

＃古いプロジェクトファイルの変換によるファイルのバックアップと報告
＃より新しいVisual Studioバージョンへ。バックアップファイルは必要ありません。
＃gitがあるからです;-)
_UpgradeReport_Files /
バックアップ*/
UpgradeLog * .XML
UpgradeLog * .htm
ServiceFabricBackup /
* .rptproj.bak

＃SQL Serverファイル
* .mdf
* .ldf
* .ndf

＃ビジネスインテリジェンスプロジェクト
* .rdl.data
* .bim.layout
* .bim _ *。設定
* .rptproj.rsuser
*  - バックアップ* .rdl

＃マイクロソフトの偽物
偽物アセンブリ/

＃GhostDocプラグイン設定ファイル
* .GhostDoc.xml

＃StudioのVisual Studio用ツール
.ntvs_analysis.dat
node_modules /

＃Visual Studio 6ビルドログ
* .plg

＃Visual Studio 6ワークスペースオプションファイル
* .opt

＃Visual Studio 6自動生成ワークスペースファイル（どのファイルが開かれたかなどを含みます）
* .vbw

＃Visual Studio LightSwitchビルド出力
** / *。HTMLClient / GeneratedArtifacts
** / *。DesktopClient / GeneratedArtifacts
** / *。DesktopClient / ModelManifest.xml
** / *。Server / GeneratedArtifacts
** / *。Server / ModelManifest.xml
_Pvt_Extensions

＃Paketディペンデンシーマネージャ
.paket / paket.exe
パケットファイル/

＃FAKE  -  F＃Make
。偽/

＃CodeRush個人設定
.cr / personal

＃Visual Studio用のPythonツール（PTVS）
__pycache __ /
* .pyc

＃Cake  - あなたがそれを使っているならコメントを外してください
＃tools / **
＃！tools / packages.config

＃タブススタジオ
* .tss

＃TelerikのJustMock設定ファイル
* .jmconfig

＃BizTalkビルド出力
* .btp.cs
* .btm.cs
* .odx.cs
* .xsd.cs

＃OpenCoverのUI解析結果
OpenCover /

＃Azure Stream Analyticsのローカル実行の出力
ASALocalRun /

＃MSBuildバイナリおよび構造化ログ
* .binlog

＃NVidia Nsight GPUデバッガ設定ファイル
* .nvuser

＃MFractors（Xamarin生産性向上ツール）作業フォルダー
.mfractor /

＃Visual Studioのローカル履歴
.localhistory /

＃BeatPulseヘルスチェック温度データベース
healthchecksdb

＃Visual Studio 2017のパッケージ参照変換ツールのバックアップフォルダー
移行バックアップ/

＃https://www.gitignore.io/api/c++,visualstudioの終わり